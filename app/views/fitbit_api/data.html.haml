Hier komt de zorgvrager data

.example_class

  :css
    rect {
      -moz-transition: all 0.3s;
      -o-transition: all 0.3s;
      -webkit-transition: all 0.3s;
      transition: all 0.3s;
      background-color: red;
    }

    rect:hover {
      fill: #f5515f;
    }
  :javascript
    // Vaste waarden voor de teken area - statisch
    var margin = {top: 20, right: 50, bottom: 0, left: 70};
    var width = 1500
    var height = 300

    // selecting and appending attributes - statisch
    var canvas = d3.select("main").append("svg")
      .attr("width", width + margin.left + margin.right)
      .attr("height", height + margin.left)
    ;

    // appending group function to canvas - statisch
    var g = canvas.append('g').attr("transform","translate(5, 58)")

    // Standaard reloading function
    var reload = function() {
      d3.json("/steps.json", function(rows) {
          redraw(rows);
      })
    }

    // Standaard teken function
    var redraw = function(data) {
      var type = g.selectAll("rect.bar")
            .data(data);

      type.enter()
        .append("rect")
        .attr("fill", "#26b4cd")
        .classed("bar", true);

      type
        .attr("x", biggerXSpacingBetween)
        .attr("width", 35)
        .attr("y", function(d) {
          return height - (d.value * 5);
        })
        .attr("height", increasingHeight)

      // Adding text to X axis
      var text = g.selectAll("text").data(data)
      text.enter().append("text")
          .text(function(d) { return d.time })
          .attr("x", biggerXSpacing)
          .attr("y", textMarginToType)
          .style("font-size", 9)
          .style("font-family", "texgyreadventor-regular")

      };

      // Increasing height to type
      function increasingHeight(d) {
        var sizeIncreaser = 5 // Increase amount of D
        return d.value * sizeIncreaser
      }

      // Adding spacing to X axis 'inside' the type
      function biggerXSpacingBetween(d, i) {
        var xSpacingBetween = 50; // changes the size of the X between type
        return i * xSpacingBetween
      }

      // Adding spacing to X axis between the type
      function biggerXSpacing(d, i) {
        var sizeAmplifier = 50; // changes the size of the X
        return i * sizeAmplifier
      }

      // Adding margin to text from the type
      function textMarginToType(i) {
        var textToTop = 10 // Adding margin to the type
        return height + textToTop
      }

    reload();


    // var chart = canvas.redraw(dataset) {
    //   "type": "line", (dit bestaat sowieso nog niet)
    //   "dataset": [1, 3, 7, 4, 12, 5];
    // });

    // chart.reload()

